<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[博客主题配置、定制]]></title>
      <url>%2F2016%2F12%2F12%2F%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E3%80%81%E5%AE%9A%E5%88%B6%2F</url>
      <content type="text"><![CDATA[上一篇文章中，成功的完成了博客的搭建，不得不说，就我个人来言，官方默认的主题真实太丑，作为一个追求简约，喜欢简单布局的人，真的是一种精神折磨，太让人受不了了。经过比较最终选择了精于心，简于形的Next主题。站点和主题都有配置文件_config.yml ，为了便于区分，博客根目录的配置文件我们称为站点配置，主题的配置文件我们称为主题配置文件。 主题替换 下载主题 进人你博客的根目录，运行Git Bash Here 。输入：1git clone https://github.com/iissnan/hexo-theme-next themes/next 主题下载完成后，将文件夹改名为next 。 切换主题 打开博客根目录，找到_config.yml 。 找到 theme 字段，并将其值更改为 next。 theme 和 next 之间有空格!! 1theme: next 保存之后，我们的主题已经替换完成了，在本地验证一下，在运行之前，先运行hexo clean 清楚一下缓存，运行 hexo g 生成一下，最后运行hexo s 。在浏览器输入网址，http://localhost:4000, 验证一下效果。效果图如下：说明替换成功了。 主题设定 NexT 有三种Scheme,他们是： Muse - 默认 Mist - 紧凑版本 Pisces - 双栏Scheme,小家碧玉似的清新 设定方法是： 切换到 next 文件夹 ， 打开_config.yml配置文件 1234# Schemesscheme: Muse#scheme: Mist#scheme: Pisces 将注释去掉就可以切换scheme了。 设置语言 站点配置文件更改语言： language: zh-Hans , 改为中文。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[搭建个人博客]]></title>
      <url>%2F2016%2F12%2F12%2F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[前言 很久之前就像要一个自己的博客，想在这个浩瀚的网络上，能有一个自己的小家，简单的写写文章，记录一下自己的心路历程。虽然有各种博客，但是风格都是官方定好的，完全没有自己发挥的空间。 虽然wordpress可以搭建个人博客，但是服务器空间域名等都需要钱来维护，而且wordpress使用起来也不是很爽。直到发现了githubpage和hexo。一颗躁动的心又要起航了。概述 github： 是一个面向开源及私有软件项目的托管平台，只支持git作为唯一的版本库格式进行托管，故名GitHub 。也是众多程序员聚集的地方,目前拥有超过 900 万的开发用户。 node.js： Node是一个服务端JavaScript解析器，他将改变服务器如何工作的概念。目标是帮助程序员构建可伸缩的应用程序，虽然说了这么多，我能说其实我也不会用吗 。。。 git: 一款免费的开源的分布式版本控制系统，用于敏捷高效的处理任何或小或大的项目 Hexo: 一款基于NODE.JS的快速、简单的博客框架，能够创建一个项目进行编辑后生成一套静态网页，比较适合个人博客的搭建。可以急速生成静态网页，支持MarkDown。 github pages : 300M免费空间，资料可以自己管理，免费使用，并且快速稳定。 软件下载地址传送门 node.js : https://nodejs.org/en/download/git : https://github.com/git-for-windows/git/releases/tag/v2.11.0.windows.1 环境安装 安装node.js， 我下载的是 .msi 的安装包， 软件会默认将安装路径添加到path中。 安装git，如果不会安装，请自行搜索教程 本机环境 windows 8.1 git版本： version 2.10.1.windows.1 nodejs版本： v6.9.2 实战开始 安装 配装 使用 Hexo Hexo需要的环境搭建好之后，我们开始安装hexo 。 安装Hexo 在电脑的任意位置，创建一个文件夹，文字随便命名看你喜欢了，鼠标右键，点击Git Bash Here ,输入命令即可安装 。 npm install -g hexo npm install hexo –save hexo init npm install npm install hexo-deployer-git –save //ERROR Deployer not found: git 安装这个插件 安装成功的目录： 本地查看运行效果： 运行命令： hexo generate 命令简写 hexo ghexo server 命令简写 hexo s 浏览器运行结果： 在浏览器输入 http://localhost:4000 , 即可看到本地的运行的效果。 淘宝源安装 npm install -g cnpm –registry=https://registry.npm.taobao.org之后的安装就是把npm install 换成 cnpm install 看到上面的图片，说明我们hexo本地的安装已经成功，接下来就是将我们的文件上传到github了，首先我们需要有一个github账号，直接去注册就好了，作为一个屌丝程序员，怎么可能没有github账号，之后就是设置ssh公钥，设置的方式： 登陆账号后，鼠标点击你的头像，点击-Your profile 点击左边的 ， Edit profile 左边，SSH and GPG keys 右边，New SSH key 随便输入 title , key 文本框中，输入公钥，点击Add SSH key 创建仓库 New repository ， 创建新仓库 Repository name ,这个是重点 ！！一点要填写为：你的账号名.github.io 。 完成仓库的创建 。 结果如下图： 部署到github 仓库创建成功以后，我们可以将本地的网页文件上传到github了，下面我们看一下具体的设置： 打开,你创建文件夹的根目录 ，找到 _config.yml文件 ，在最后面添加下面的代码： 1234deploy: type: git repository: 你的仓库地址 branch: master hexo 的配置已经完成。 接下来，我们使用hexo命令将文件上传到github仓库中。 123hexo clean # 清楚缓存hexo g # 生成静态网页至public目录hexo d # 发布到github 效果如下图说明发布成功 在浏览器输入 Your-Github-Name.github.io ,就可以查看你的博客了。 到这里，博客已经基本创建好了，后续会继续跟进博客主题的替换，博客样式的设置。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F12%2F12%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
